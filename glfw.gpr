--------------------------------------------------------------------------------
-- MIT License
--
-- Copyright (c) 2020 Zane Myers
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the "Software"), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
--
-- The above copyright notice and this permission notice shall be included in all
-- copies or substantial portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-- SOFTWARE.
--------------------------------------------------------------------------------
library project Glfw is

    -- The windowing system for which the GLFW ADA library is built
    type Windowing_System_Type is ("windows","x11");

    -- Default window system is x11.
    window_system : Windowing_System_Type := external ("window_system", "windows");

    for Languages use ("Ada");
    for Library_Name use "GlfwAda";
    for Library_Kind use "static";
    for Object_Dir use "obj";
    for Library_Dir use "lib";
    for Source_Dirs use ("src");

    package Compiler is
        for Switches ("Ada") use (
            "-gnatwae" -- Turn on warnings as errors
        );
    end Compiler;

    package Linker is
        case window_system is
            when "windows" =>
                for Linker_Options use
                  ("-Ldependencies","-lglfw3","-lwinmm","-lgdi32");

            when "x11" =>
                for Linker_Options use
                  ("-lglfw","-lrt","-lm","-ldl","-lX11","-lpthread","-lxcb","-lXau",
                   "-lXdmcp");
        end case;
    end Linker;
end Glfw;
